name: Review pull request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check_and_format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install diff prettier

    - name: Run checks and formatting
      uses: actions/github-script@v7
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs');
          const prettier = require('prettier');
          const diff = require('diff');

          const prNumber = context.issue.number;

          // Get the list of files changed in the pull request
          const { data: files } = await github.rest.pulls.listFiles({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNumber
          });

          let comments = [];
          let event = 'APPROVE';

          // Check each file
          for (const file of files) {
            console.log(`::group::${file.filename}`)

            // Check if the filename is lowercase (except for PDF, ZIP, and DOCX files)
            if (!file.filename.match(/\.(pdf|zip|docx)$/i)) {
              if (file.filename !== file.filename.toLowerCase()) {
                comments.push({
                  path: file.filename,
                  body: `Please change filename \`${file.filename}\` to lowercase.`
                });
                event = 'REQUEST_CHANGES';
              }
            }

            // Check supported files types for formatting and style
            if (file.filename.match(/\.(md|yaml|json|svg|xml|yml|yaml|css)$/i)) {
              console.log("Checking format")

              const original = fs.readFileSync(file.filename, 'utf8');
              const formatted = await prettier.format(original, { filepath: file.filename });

              console.debug("Formatted", formatted);
            
              // If the file was changed, add a comment with the changes as a suggestion
              if (original && formatted && formatted !== original) {
                console.log("Format changed, adding suggestion(s)")

                const changes = diff.diffLines(original, formatted);
                let position = 1;

                changes.forEach((change) => {
                  if (change.added) {
                    comments.push({
                      path: file.filename,
                      position: position,
                      body: `Suggestion:\n\`\`\`suggestion\n${change.value}\`\`\``
                    });
                  } else if (change.removed) {
                    comments.push({
                      path: file.filename,
                      position: position,
                      body: `Suggestion:\n\`\`\`suggestion\n\`\`\``
                    });
                  }

                  position += change.count;
                });
              }
            }
            console.log(`::endgroup::`)
          }

          // Create a review with the comments or approve the pull request
          await github.rest.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNumber,
            event: event,
            comments: comments
          });
